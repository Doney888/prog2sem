import time

def logger(func):
    """
    Декоратор для логирования информации о вызове функции, её аргументах, времени выполнения и результате.

    Параметры:
    func (function): Функция, к которой применяется декоратор.

    Возвращает:
    function: Новая функция, оборачивающая оригинальную с добавлением логирования.
    """

    def wrapper(*args, **kwargs):
        """
        Обёртка для функции, которая логирует её вызов, аргументы, время выполнения и результат.

        Параметры:
        *args: Позиционные аргументы, передаваемые функции.
        **kwargs: Ключевые аргументы, передаваемые функции.

        Возвращает:
        результат выполнения функции.
        """
        start_time = time.time()  # Снимаем время до выполнения функции
        print(f"Выполняется функция: {func.__name__}")
        print(f"Аргументы: {args}, {kwargs}")

        result = func(*args, **kwargs)  # Выполнение самой функции

        end_time = time.time()  # Снимаем время после выполнения
        execution_time = end_time - start_time  # Время выполнения
        print(f"Время выполнения: {execution_time:.4f} секунд")
        print(f"Результат: {result}")

        return result  # Возвращаем результат функции

    return wrapper